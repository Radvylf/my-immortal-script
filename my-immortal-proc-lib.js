const my_immortal_proc_lib = (() => {
    const b64 = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789-_"; 

    function decompress(data, bits) {
        var d_bits = "";
        var string = "";

        for (var b, k, i = 0; i < data.length; i++) {
            b = b64.indexOf(data[i]);

            for (k = 0; k < 6; k++) {
                d_bits += (b & (32 >> k)) ? 1 : 0;

                if (bits.has(d_bits)) {
                    string += bits.get(d_bits);
                    d_bits = "";
                }
            }
        }

        return string;
    }

    function decompress_indices(data, bits, keys) {
        var d_bits = "";
        var output = new Map();

        var n = 0;
        
        for (var b, k, i = 0; i < data.length; i++) {
            b = b64.indexOf(data[i]);

            for (k = 0; k < 6; k++) {
                d_bits += (b & (32 >> k)) ? 1 : 0;

                if (bits.has(d_bits)) {
                    output.set(keys[n++], keys[bits.get(d_bits)] || "~FINISH");

                    d_bits = "";
                }
            }
        }

        return output;
    }

    const markov_data = "";
    const markov_bits_data = "wwiRxx6hmGxl2hjdxjOMXZduPg6MZx0OLsmQcVBR1HLtBRqHQl2jNMK7QvRiTRlR49_fKu0VPiE0ZUB9zj8u0ATZ-XeeYYcUjRyGltGP98q7tGNFixYsWLFixYsWLFixYocVlmhhDisl6TPjBqn3HRLtl4EYOGCMrKop0wRlZB_3DbtkBeQyj5hpbZoKwYMGnYVYj3QcVvpTsNLZA_SkruyBot3bPdLuxGt6j5Dinguc5wOKftBhhViTVNe9NG8YZphpT5eOioyni6HQgqMIo7Z8mARRviowgtVaocFk42eTAJemEwCGNUHZBOg5enwcgE4kmCNlE0aED0BUaEDcShqKj_wOQLgAEnx1AMOsCmkOsEC6cfXULY3l1ClEU7dQhbiVy6mWhBHEqF17ryUfMNtSPXRhB1qRvPnHFHbPn9gOblGcdx2aYGOXqGcd4uPY6oYtvdxxKhjg9TDGOAro7_2HWQCfkNsjY5xtdUS3FG3VAtsJdQ3UFYNOwgDrV5IKwYMGnYVYhhDrEDqSFR2IGUbReDjwVxMD9nmwceM4lQn0evpT4uwnLwijQYYVYgHeEEOJBhhViAd4QQ3DGfd53yp9TpKhPlgro2fP7F4S9vsMHJ8sZ9y8KVSV4VgRp1CsEOqDDCrE-kadQrBDNnhJ9bJF8z5voSDf3AgKC8yHecvMvAnSnbzKpuqZjIPS4BsxkBfYZuycd4wF7J_BqsrqnnlGs3ZPUegwwqxIR17Jw-jCDKMK_snAqIAzr3X3X3ncSoJruudqLFixYsWLFvnFH4wazTijCdKdUzTswZBv7k5emwianeAyAlAwe5OzvQYYVYnkMOs4gc4YCziJYYF84gXDBvnB-XKo1mnARhS_lZqdMXrHEvWgFAADcWgLVzjMtGSbmZaFjidOJUGZaFjKSTS0DGuXrqXS9dgTiVAUVdgtPCMy7ZOJKZlt9fSoXrAviXoj1Q5eguz-xego30r0ZvN6FlH-kbR83oWUaCsGDBp2FWI8q9C83LjMha9fNZkLlU9ehYs1NIl6vRYEAG9FgtGqZkWycTSG48ABtxDcY1g4zItL0q9B-vJ1DSjgf7w0o2_eG5kz4xeGr0cTQaNxteTjidKvJxlJM1fdeR-M1dOpuvIjBcSTREe29P308jlcYOTyMX9I2Df3CCha-kdSC5MuVRoopBVjvKNx6xoMMKsTeOpBUDvcfKx6BjD8T6WPzv7H_dzHkaSNx9gRqU_Ex9tgNwTqiB3kFtL9ITHn6ocnmYwFIWCUaYCkL2grBgwadhViPNryFywV97hCxfX8uW8iVNEWj1uuJUJ4y2odTxlKALcIZCwAbhFgtdKTRFsm_uENx-uTxuMBqnlpffEryDwQALyD9jVOzw-UA24QeLTHctGC-ka_Y9hOP2MbgHey2m-vZSuuXsg8Ry9kBQVgwYNOwqxHr7BDscvsFL7cvsELcefplqLFvt3XkSftOnf3tyjqeFFblGte3C1BhhViGG9v3nEcSoCit6dAH3G6x_iHVusZ8dW_iFChQr29SFa9uH0fN7cCbP1AIR-oC15fqMnxH6hejnG19kDP0N0Ytr7V5Gzt9iI9JKNxhdhOcuYwsonSjmMKLf_-7mMC19hhNWIyAfXxMYscRRtF6-xCxuvm4yVTuMF5ct5-nJAo49KNovCSBRl2EUSyym_Jgoyi_dwlhacE6JAo-8_0jaP2GCXToMo-SQKNY_3_jYQlrGU6okCjQO5Q6EJaBlOvEvP0p0lka6_uqJdgXvol22_Q-4kS7S7vHPaiWfpRtF1UgRQh3PZ0KEMGEwRe86XBDoWnT4UEVYIRRooIq9nhBQRVy7qhQRVi3lCgijCggtTCkC7zpKkCpBBh0p2UIdKRlfdkCWPN_IEsaaJAkAjh0RsokCR4UaTBIDdZVHRFeR_4kcOiCNOHRAuAlAwaeFngTFPCIKOJ0p06EFG3ToRmujv_fJAiF6PkCIln7x0IFsHBQQe7IEBJSGWjZOycEmcnZPswK7J5eevZOLd9e6-68j3Uk6MFNUk6PabySdGM64b6zi7TcKnFGfcdknBafE07I-Oes5Y4BJJyxhOvWcMoVTGUfgGSUxll-wwcMFMZRYnRJTHmhVhhJTGvT8MFMctGFaSmMXN7JSUIfnGGcUIYMo-ZKS95-NmDWcWnX91TOKsE99w1nFXtBWDBg07CrEe_JSVconSnzOKsWp1RrOL4uE1JankMJKSi-nJKQh4N8GDT6QhnEiSky1ASgadhViAclPdeTK6qSmkebKSmka6O_98ZywVGFJSvMwcJKVr19IVSuXpnLFsKZwz0i4x1Gs-MYQUsoWvs8plo04zy915ANnlp1NnIsqwU_eFLKvM4ISLKtenVM8q_AORZV1KDPKsPMLPKsChBhIsoypF5vyLXr3ItEYLpx8Ao9nPagFHKY8dAUYtwxARcwYKWgqxzWDkGGFWJ5ARVjXFAIqB5-JDlQMrdU7Dlzg07CABFI1cUaTLQWwI1QCLbbKo0UtBbSqNovdSLQU_RhAQQ6khIcIb6VB1yRaO8_SnVQ9OjF3j6HWC-8Al7G_AS5fpGky0LFvQYYVYgHItEsG-nrRaPUwWzwkOy2-6qHZS_uQ7IW7_dUlD2C1BhhViAbgnUPbJ7-2eVDtxxGDkO3GcSNh7S_AR4L4k_ehz9lOqhz5ROlJQ54vpxhTPqNpFsh-ckWy8Kg309bKoJ0pnshajZF2zPCltx3iRbcb7EiwLK0j0caF2dU0Kgf300KiX7x2VAubBoXPMFoUgFdHf--AMpG3QpBSJYMMKsSapr3po3jDNLQpAveJkFDwCtC28G_Oy2qQYYQAMp-iU0CBcSOwgtHIN9PQFkuKOwl6e4dhDf9tDIFxsIAzLuuInRE5oZDRYsWK07J9Gqyuqad1915MopE4ds8dzhgP5zGx6A1OqxpdvnAHSWU3jiVDGlFiOPlY3NDIpFKx4CUDTsIAHSsZ4QB0y3AHTYFQ4YmLlzG22f2P3MbaXnDcafpxKhRMWiwT8aLC1vANeSEA1rHJQDWsbpR2vw2SaLzgwaehZALjZI07WRsxzlxRp2sgbkG-noWHuJUGiwKE0RGOmIDRGMwcJkILm-cO0FXqCyehBfD0G-noQWp048doKHmJ2goFASgadhViPNEZpsWiF6bPmiJWHGiGQ_mAlAwaehDIY5BhhViAbRFs33TtDfTbKdotLASmiDxzCKQg8ZIUjOp1oRpxJoyHm2aMpXBGjIWp47sEPMZpYIb3x80t3nUww0tTrjp23H-ka0bywVgwYNOwqxHhGjcWIo07t4c9tLVHjs8eYDQ9A4nSgGegZUCYp6D6k27Q-wKDDCrEmqa96aN4wzSdn22cSJkH2lUwdnn6eeno_JA2UwyBrId8qZMvHyYNZVH9jnDZ6yD8rqsr8nrICN4lPxJ7bNwxmTfSjZlZALzBWDTsIJlZGzvOPplZEr-x_3cmVkCwP5yZWzsHDAG2I0efIGnlHcSoGANPKN18Sen5oKwadhBRhSBp69P6vf2zyp6f4mO7wxU9x2en1DGZHh5pqkmDk9PAuNhFG0XpCcd5UhP4Bp2EEhPUiyE4fAARPJwITr4nrX2TgmGDnrX2T7ZVG-tfZPK4wx619k4sx4761919k-gAhhJX3X3X3XkuKNFV91zh3TnrX3XOGA3BOvWucPAAdPrnDJckrpH3ZK6RvumceneGZdvvjMqBxHvQqBnEhRBc5qnTMpGnlehQ_jBmUCDDMLSjRRHef9Azp0rdM1jzHM1oBG8dV6LRtdGz5_YOG8dV6LQNNoZrqbqnTNYt4mIRHqjCJCEF2cN9EFl46r0QUW2JiEBaEcSoeiMjZ30QsfyGUfJmhY0IMowjNEuXhmgWISEBo8xiQgNGVBhhViAZnX3nd5wzrp0GEhBBR1GAggownQogjMmSZJkmRmQvQAQyj5MyJeCiCA_KSEEAXkURYF18zsFr7DHpbIGUYRm3H4J6NxsvpaWazM8f6RpIQf4-6b6H1H3HRPQ8W8J91rHoxal2oNSoBJi1KjZwTEVErjDUqA_exFQBe3VNS1IZalD3hGpbSzatSnj_YYalP8dKTZT6gA2pTxcFYNOwgTYQ8xTUKVWIIWcFWMijgf3sRkUY5xtRA2plm42ExGS9CcJrGXhM_vsrjqsRlUmGmzIPU6TWMgITnMXdfecxMWs4E_nMU7b6RNadKAXFOFvwmtSPMW1pQPccSoCrUoGhQoUKFChQmtOdhQq1JGqMIMTdLId55RuKlkMwbiptmmIa0t9cfKxU28cdTdNqhsGGFWJ5TdJ47lzFSeM9BhhVifSNTa49MHMSy7PlNVlGf1NV7cdarQPcFN0eADNVoqG_ExLQL7arzsfarI0phqsPNFN7eBOJtdqnEhTc8e44lQxLPGcSoJtA9xqhA7jDDVCBn4KsjOxzjVBGlOirIZD1ptDIZ_bCYkW2hi1RaUQmsg_T7EGj1tQ2WFCahtgVElNQ22zDGINtLBWSk-wafoAifavJxJqRGPBWDBg07CrEeytSIxqwyZlzPKAK4wcxEFXoxMcRBfDyjRViC1FPTMof9I2j5mZQL7DEzCHYcuKxEBDHHEqGIjvO90rERTpwQmsQsFldVlakL2UlM1y3IN9PsQsWIcxESsKakWBADmds03TNvqDDCrEhBkztKmf32VqQfpwxxMh96Q8sv3pDy2BYSHltsAKQ8oEl-Q_Z_kPQPP5D0DTEyH1CQ-0eoR8h7LbhIeyl4B4jyizYN9PPtmAPIe30biPQPViSH2QMrdU6ckPtUgrkPPHYYkPPGffiAwc";
    const markov_bits_bits = new Map([["00000000000","7"],["00000000001","?"],["00000000010","5"],["00000000011","("],["00000000100","8"],["00000000101","x"],["00000000110","9"],["00000000111","6"],["000000010","\\\",1]]],[\\\"\"],[\"011100"],["000000011","\\\",1]]],[\\\"\"],[\"100"],["00000010","111\",\""],["00000011","w"],["0000010","00\",\""],["0000011","]"],["000010","0100"],["00001100","\u201d"],["00001101","10100"],["00001110","\"],[\"0000"],["00001111","110\",\""],["000100","t"],["0001010","\\\",[[\\\"\"],[\""],["0001011","11\",\""],["000110","1\",\""],["000111","0\",\""],["001000","1011"],["00100100","\\\",1]]],[\\\"\"],[\""],["001001010","2"],["001001011","\\\",1],[\\\"\"],[\"01000000"],["00100110","\\\",2],[\\\"\"],[\""],["00100111","1010100"],["00101","00"],["001100000","\\\",[[\\\".\\\",1]]],[\\\"\"],[\""],["001100001","S"],["00110001","f"],["00110010","010100"],["00110011","\"],[\"1011"],["001101","d"],["0011100","y"],["001110100","\\\",1],[\\\"\"],[\"0100"],["001110101","\\\",1]]],[\\\"\"],[\"00"],["00111011","\\\",1],[\\\"\"],[\"100"],["001111","1111"],["01000","100"],["010010","n"],["0100110000","\\\",1],[\\\"\"],[\"0000"],["0100110001","4"],["0100110010","O"],["0100110011","V"],["010011010","\\\",2],[\\\"\"],[\"00"],["010011011","\\\",1]]],[\\\"\"],[\"11"],["01001110",","],["01001111","],[\\\"\"],[\""],["01010","e"],["01011","011"],["011000","l"],["0110010","1100"],["01100110","\\\",1],[\\\"\"],[\"00"],["011001110","\\\",1],[\\\"\"],[\"01011"],["011001111","\\\",1],[\\\"\"],[\"011"],["0110100","\"],[\"100"],["0110101","\"],[\"11"],["0110110","u"],["0110111","11011"],["011100","i"],["011101","r"],["011110","s"],["0111110","m"],["011111100","z"],["011111101","\\\",1],[\\\"\"],[\"0011"],["01111111","b"],["100000","\\\","],["1000010","!"],["1000011000000","&"],["1000011000001",";"],["100001100001","\u2018"],["10000110001","Y"],["1000011001","E"],["100001101","\\\",1]]],[\\\"\"],[\"0000"],["10000111","\\\",1],[\\\"\"],[\"011100"],["1000100","\""],["1000101","…"],["100011","0000"],["100100","\"],[\""],["100101","10\",\""],["10011000000","G"],["10011000001","j"],["10011000010","R"],["10011000011",")"],["100110001000",":"],["100110001001","U"],["100110001010","A"],["100110001011","W"],["10011000110","-"],["10011000111","P"],["100110010","\\\",1]]],[\\\"\"],[\"10100"],["100110011","\\\",1]]],[\\\"\"],[\"111011"],["1001101000","N"],["1001101001","H"],["1001101010","~"],["1001101011","F"],["100110110000","J"],["100110110001","K"],["100110110010","Z"],["100110110011","X"],["100110110100","\u201c"],["100110110101","B"],["100110110110","C"],["100110110111","'"],["1001101110","T"],["100110111100","/"],["100110111101","q"],["100110111110","M"],["100110111111","L"],["1001110","0101011"],["100111100","\\\",1],[\\\"\"],[\"001011"],["100111101","\\\",1],[\\\"\"],[\"10100"],["100111110","\\\",1],[\\\"\"],[\"000100"],["100111111","\u2019"],["1010000","g"],["1010001","\\\",1],[\\\""],["101001","01011"],["1010100","101\",\""],["1010101","\\"],["101011","1"],["10110","11"],["1011100","k"],["101110100","D"],["101110101","\\\",1],[\\\"\"],[\"000011"],["10111011","\\\",1],[\\\"\"],[\"000000"],["101111","\"],[\"00"],["110000","["],["1100010","\\\",1],[\\\"\"],[\"11"],["110001100","\\\",1],[\\\"\"],[\"00111011"],["110001101","\\\",1],[\\\"\"],[\"10001011"],["110001110","\\\",1],[\\\"\"],[\"000011011"],["110001111","\\\",1],[\\\"\"],[\"00101100"],["1100100","0101\",\""],["1100101","p"],["1100110","010\",\""],["1100111","1010\",\""],["11010","\",\""],["110110","01\",\""],["11011100","],[\\\"\"],[\"00"],["11011101","v"],["11011110","I"],["11011111","3"],["11100","o"],["111010","h"],["111011","0"],["1111000","100\",\""],["1111001","."],["11110100","\\\",1],[\\\"\"],[\"1011"],["11110101","\\\",1],[\\\"\"],[\""],["1111011","c"],["11111","a"]]);

    const markov = new Map(JSON.parse(decompress(markov_data, new Map(JSON.parse(decompress(markov_bits_data, markov_bits_bits))))));

    const punc_rock_odds = new Map([["!",[0,0.9914529914529915]],["!!",[0,1]],["!!!",[0,1]],["!!!!",[0,1]],["!!!!!",[0,1]],["!!!!!!!!!!!!!!!!!!!1111111111\u201d",[0,1]],["!!!!!!!!!!!11111\u201d",[0,1]],["!!!!!!!!!111111",[0,1]],["!!!!!!!!!11\u201d",[0,1]],["!!!!!!!!!1\u201d",[0,1]],["!!!!!!!!!\u201d",[0,1]],["!!!!!!!!11",[0,1]],["!!!!!!!!11111",[0,1]],["!!!!!!!!11111\u201d",[0,null]],["!!!!!!!!1111\u201d",[0,1]],["!!!!!!!!1\u201d",[0,1]],["!!!!!!!!\u201d",[0,1]],["!!!!!!!11",[0,1]],["!!!!!!!111",[0,null]],["!!!!!!!1111",[0,1]],["!!!!!!!111\u201d",[0,1]],["!!!!!!!11\u201d",[0,1]],["!!!!!!1",[0,1]],["!!!!!!\u201d",[0,1]],["!!!!!11",[0,1]],["!!!!!111",[0,1]],["!!!!!1111",[0,1]],["!!!!!111111",[0,1]],["!!!!!111\u201d",[0,1]],["!!!!!1\u201d",[0,1]],["!!!!!\u201d",[0,1]],["!!!!).",[0,null]],["!!!!1",[0,1]],["!!!!11",[0,null]],["!!!!111",[0,1]],["!!!!1111",[0,1]],["!!!!111111111111",[0,null]],["!!!!1111\u201d",[0,1]],["!!!!111\u201d",[0,1]],["!!!!11\u201d",[0,null]],["!!!!1\u201d",[0,1]],["!!!!\u201d",[0,1]],["!!!1",[0,1]],["!!!1)\u201c",[0,0]],["!!!11",[0,1]],["!!!111",[0,1]],["!!!1111",[0,1]],["!!!1111.",[0,1]],["!!!111\u2019\u201d",[0,1]],["!!!111\u201d",[0,1]],["!!!11\u201d",[0,1]],["!!!1\u201d",[0,1]],["!!!\u201d",[0,1]],["!!\"",[0,1]],["!!)",[0,null]],["!!1",[0,1]],["!!1!",[0,1]],["!!111",[0,1]],["!!1\u201d",[0,1]],["!\"",[0,null]],["!)",[0,0.75]],["!).",[0,1]],["!.\u201d",[0,1]],["!1",[0,1]],["!1!",[0,1]],["!1!1111",[0,null]],["!1!\u201d",[0,1]],["!1).",[0,1]],["!1.",[0,null]],["!11",[0,1]],["!11!",[0,null]],["!11)",[0,1]],["!111",[0,1]],["!111)",[0,1]],["!111).",[0,null]],["!111).\u201d",[0,1]],["!1111",[0,1]],["!11111",[0,1]],["!111111",[0,0.75]],["!111111!1",[0,1]],["!1111111",[0,null]],["!11111111",[0,1]],["!111111111",[0,1]],["!11111111111",[0,1]],["!111111111111",[0,null]],["!11111111111111111111",[0,null]],["!1111111111111111111111111",[0,1]],["!111111\u201d",[0,1]],["!11111\u201d",[0,1]],["!1111\u201d",[0,1]],["!111\u201d",[0,1]],["!11\u201d",[0,1]],["!1\u201d",[0,1]],["!\u201d",[0,1]],["\"",[0.8571428571428571,0.1]],["&",[1,1]],["'",[1,0]],["(",[0.946236559139785,0.021052631578947368]],[")",[0.020833333333333332,1]],["),",[0,1]],[").",[0,1]],[")..",[0,1]],[",",[0,0.9972602739726028]],[",\u201d",[0,1]],["-",[0.0078125,0.0859375]],["-\u201c",[0,null]],["-\u201d",[0,1]],[".",[0.002258610954263128,0.9982788296041308]],[".\"",[0,1]],[".)",[0,1]],[".,………………………..",[0,1]],["...",[0,0.7777777777777778]],["...!!\"",[0,1]],["...'",[0,1]],[".\u2019",[0,null]],[".\u201d",[0,1]],[".\u201d(",[0,0]],["/",[0,0.6666666666666666]],["//",[0,0.6666666666666666]],[":",[0.01694915254237288,0.9827586206896551]],[":\u201d",[null,0]],[";",[0,0]],["?",[0,0.9047619047619048]],["?!",[0,1]],["?'",[0,1]],["?)",[0,null]],["?).",[0,1]],["??",[0,1]],["???",[0,1]],["????",[0,1]],["??????\u201d",[0,1]],["?????\u201d",[0,1]],["????\u201d",[0,1]],["???\u201d",[0,1]],["??\u201d",[0,1]],["?\u201d",[0,1]],["?\u201d(",[0,0]],["\u2018",[1,0]],["\u2019",[0,1]],["\u2019.",[0,1]],["\u2019\u201d",[0,null]],["\u201c",[1,0.0013175230566534915]],["\u201c……….",[1,0]],["\u201c……………….",[null,0]],["\u201d",[0.1,0.875]],["…",[0,0.2]],["….",[0,0.5]],["…..",[0,0.7142857142857143]],["…...",[0,0]],["….\u201d",[0,1]],["…\u201d",[0,1]],["……",[0,0.8]],["…….",[0,0]],["……..",[0,0]],["…….\u201d",[0,1]],["………",[0,0.25]],["……….",[0.125,0.3333333333333333]],["………..",[0,0.25]],["…………",[0,1]],["………….",[0,0]],["…………..",[0,0]],["……………",[0,0.25]],["…………….",[0,0.25]],["……………..",[0,0]],["……………\u201c",[0,0]],["………………",[0,0.25]],["……………….",[0,1]],["………………..",[0,0.5]],["………………\u201d",[0,1]],["………………….",[0,0.6666666666666666]],["……………………",[0,1]],["…………………….",[0,0]],["……………………..",[0,0.5]],["………………………",[0,1]],["……………………….",[0,0]],["………………………….",[0,0]],["…………………………..",[0,1]],["……………………………",[0,0]],["……………………………..",[0,null]],["………………………………..",[0,1]],["…………………………………",[0,0]],["………………………………………",[0,1]],["…………………………………………",[0,0]],["………………………………………….",[0,0]],["…………………………………………………….",[0,0]],["…………………………………………………………….",[0,0]],["…………………………………………………………………..",[0,0]]]);
    
    const short_known_data = "umDrcdr35E6OvpBx0mEvUKFZhKdhSMUP_OT7kpSo46v4ltUpWpRr9HJ5eYoyvIcOgmZ93ELutUilIMJAFqKl2GSSvPmqB2n0VJcUilxhgTkmCIFKAB_WuX11S_D1zhY-BhI28wFLKs6EtFFLb6QpFQUjqF4tlVVTELB5nprGrwt-AE5StABOjhWk6v9DqJO80JKQ0JQCvgcpAn-QfS_-pJ_6CgBnQOuCvyICXU-6TkFVhrtClIaQUmFV84j820d4LvragKtndss9RwnUmAPC4kvKNDxEsIqr4KJkjqCqUnBg0JKFCjG1atTpMCEf4QauZfUkTzfUlU6_qlGPdMFaHVrTUwAe-ZyiWEPwAVy8Jqsp-mYQvWq-8VphOPKnZ4hSEclZfU4SVCUF9TiHRXulOTwRpBLJi-SHZGOg3QpT5GzU_OU8hwp7QOsQKLR7VZyKdC0mDxkL42pirlE4cguCkPDiwKFAwQj7MiEPhnUyUz-CqmCWmUpljxCmKUU2-Yym5idfwuVSoqgj37SmlaROdSAVfMAeCcsPzBFZCTvbcDFqrMYw8h6prfFQqhIoX__ikahChPkyQA_dFQ68Mvn6h5GIZ4hQyULUKIwoaiC7aKUoFaUDuoALqA4o1xIhbgyQoMR2NC4UHBmOyKvo1avujyJgUM3qgks-OHT_H5pJVBfizqgj2VNpRqZFSHE7tA28YYFbyTWulGz0zy1qMHgFGQQwlaALpeCj1UX1H63BIugLgBESlglMgY96EhU-hjUhQw_qOLRDZR1JSFIb0olgP9qJlFEP9FET1WAhlYb39hoWCuh2iKUWAuMghrQwAgUcYN7rSBAsrxhcmOlAYwIUXnkTsRdbgRBRSsQZVJ-VCtzUyMd9YsIx2oqbAoTVq3wW-eTUgbPuEUrXibx_cqekAlP640DjarJRX3dhWj5_SZkrT-6tyt_9_vNDTP55P9CX6thAUGIxHYzaVsxkotF5QQhJP0vK26KT7gSrESAXpDIUYAA4LHeSFciscIYHdJ6oWpmUwRasrBA_g1YUArMBPDVFeA-rOrIb60ghd9m4W5Ssolmr0NZKgqC7W7BhJwKAskwr31pjEQMmbphQNAHlbTleIBK8q_fMKRX_XsFLf6collLTegHvVfAU1iu-mO5nfPIUh_1EUr7SuSxf-tCJEh5gBiJFjExWICZi4rBgFc1cFcVdkbq74DHcEIu7IQBuSrpwOICuqVohKlG-gb6pY9mf4EUCBBBUgFLSpJUgIqFGXkKnGMmffkVPVMVNMlQhYZQE4fpXhjSVDSv1QFQcb9KHao3wqPJKKIOJxNMbI1ALDNURUVFAZ5FWiiAokF2Xp7ZgGxallVbVY7VZns-8NgLVXh8Ear_GBNVxZlXfg_6KpEqpwGhOqhhmW5P2SqKq2NiEZJKAEB8DCbThSSq6qhaqrkaqq01XARqhqnFq7hwL7Cmr8Q1YiEU5GrRWGzKWdHiQg1EBM2hgbQu1Hi1BiD9qFMaLUybU7UjUvnAJtdNdnNcJJrlr64lGLX6HzQLWvP_DXtrHUh_RHUTRIqDWWkDdNZ_yF2AEBRx5o3awElu4RrFZ2tg1u1oCyDRYD8lA_7gSS1q0VpMrXZ4STlP2i8gxyDdtENE-2hiCHPMXiVqlg20c0eslSFrRn2jbrB4YACQLLTQUsGP_pbDMahKBMq0HbzwAaACDQIKL00N8vC8jQ6E-FKwZy9T4KDzQgS4ETQtgRaaGzEMAP9E4P4wcpptpg0EzH9_maZ-ABeuag609ZC2J-gbAQS-QpDIgafWEmxIQRJ5u0sgkKG9BMLDR8YsEMqCI64E2nCWnfpIuGHZg2jEaSMQSEtJmYaQHMW2ZPM-2SB80jQ8GlgTuWl2lA0rgyW6m626B0GV9ukmC3Vbuk4WWUmC_xVkD2DbvbsskSy7drcTccFG4G4W5piZsca3OTBWNTcnPLFj48BUaxGi7crfTfaTMG0EdEhN8ShJN8t_N_t-RpjcD77fspoGQby-3m3gUIS9pt48_-_Zo9fjk29qXgdztk290wnzLekay-nsNYN6gsBZkmahob0UjLPvCW-aoDC2Ve9Qa-IXTLrZYugDkftkYgXRt9vGkoGyUtKTguGzh9s9sxMt_VAls2H3XBYIRGo1boBDeNhTbDHOb2c9fbARnw7YPO8c2N4QSjfICEikAYswcTGy7Y_okKYg6D-k5sReTQK5RxTScfRtQGwRoYWxYxSnINtCkAA23Lui2UdkA-ZUAenrNsclMhzwtstvYBt9flmKijPxjGBYk5OwDUG3IwNumWWgxmzL_pHUqF8ArZJ4GYPSBO-fn5fV8nhulhJvd1aBNXbSJbToqWNoX0G0eC86FoNrQWB-dLILGMMoxMwbchQ3xGarCeATzhEBtfYwdkbUzRnbVyodFny-kwtmDQ51ei_-MhXmgEYy4-T5iqYjKxWik1iYoxYpYuyhefNcObqAYv9YswweLT00B8MWsRYJfUGI0c_JsQbm3lFyNXoYhIi4xMKLSlUt3VGkE1MZ_JYxOFnWBiRYMWJVnWaNOIWbgccWOmO1n-tDHDHJfCEBWPmPwfZW2Y8lX3Bse_YynyAhsxmRmzjbWMLGNAlYxDGwNrVRiEuQJlXMdGNzWY0Y1EemCo9MF3-GCGCY9gusHCFH4lgmhwAsbVmECGXwJByObn-cYPDBhGfJcASUgiVECCS1eic4M2DSI9aLPESLewETLZYV_QjwESOjXJyxJJ-AmiwHHnK0diwADf51gElgaZUZy5KwOguQGECxXAUDikAwwIGBYCL6w0w2ZMMLjQ9lSEfiSw2FsSwlID8petUh1xPEumwt5IIPDMafWYZHLSpetpo8eDR6SHLjLzAPBh7VSan4iPFLGN32QywgYfEfz-cfI-jcsOMOhBhJMzNTCZYgwgmUJPd9VhEssM2FuiKDC7CgjIvgPmFWama49pw8zYJmg41IHmaWbj4M3s2ESMwzb5j_HIdGYi9cTXbeDPxlkgNYImAzGDoezDMDMO2OyJCNzMzM8cwzJnmDupZkTMsOJnM9EHFaeljDPIz2MLPDPObWuciz9grzMyD5mgz-u9YkB8gF-j90Fb_Oz4cGfUktqRM5eUqzntoGCODOAIGcZgoAzseODO5K6QqeFnSccp65vha9Z1XxkrRM7lGS5Vq37JHLsknMnAGaYSKOLJ9yZ5wkTJmCFYYzxmkGQqu0zwnKsbJqBqoMhBGzZDt7IAnLQ7BJ5kEACFMjTZHj7dBkQEPrTmtovHawBkU45IzOEukhIcoGWmW2WF3KR3XgtvaJBTMdjTLIsBK6x0Kk2WBtdsvHMvsuCO9yWXReZHxGNMpMphlDExWUZsrGgyuSSGVI2MqhYiTGtGii9U9W9QC5yr1N7-7UbOlIFCQUFPXLz6SktXST1_DPWPWvRAw8tdZfTi_RuVSyvR5noASVFASF4cUmui6az0IQemGWTuvqL06_nPSDS9K90Huw9wHuUtL6b3wrIEQ9_ox1BK4PeQ7C_avA7T0Lj3oey7D2Z4rUYDT9E0noGNaew0HsXttAxCUXtxN7TQvmJC6gRKNfUAQA-e1iXI8VsCN4sIZniHidreOSPKePjaNZ4zezKnAaOVYfUIlIjVgRkiJAEST7hfREmo-PGp7629UnYvBWngyrwEDwUeBeG5Qx3hzyDwhKbwvgfVcbVg3msqbzaJIuLvMJE8zBDSk9zO81pXNE2gTMI2SdWSa1lEw89oQZefechWgQCdiuYjy86Hknk3kOXeRSgQXp5Z5dfkeo8okQidz3PcI8rE6NS0cMEvfq8H6-EfoOfp3T9yMKfvfsgPE8Gl08Z-JAKP_v2r3s9ozU_FxEKvlzd0X4_o8ifvwAg8afh378ySG0k6GXo196JpY_OEgV5ip6wfkKVviS6_LaIEQahyo2lcjEf6XDO_3NKP8JAdSwhd4mEmY3kvLxxkttmaW2f5hZtT_1qOvObjt_9_x_1_J_NeMrKfwiQAH8U94_sA_u_pChS8wo0jef1uiBd8qrc-XMXfIfJQqJr51l6gLvnrC-YRD181G8FTHXc24Y1Y3OfCiE-H05KX60nPgCIZnrLkDWozfB93O7fGFcm-OBVPiJDPECb4oNv3OgH2kNdfbfYz7JfEZvsh97ZD3VNooPv0H3PL7qAQhpMoH0n084ORKPoARB3D6ItvN0PYjHn1i0uRH119ciI6ooefUs8_ps5IhTqhT6u4ybJypysjz0VcogpwLlMS8iNW3Wcuz2-bl7ljlociibYbIq5HDWdcjEHSnRgOQQg4M0zzkLk0TM-dcQHJwFxLNw5I5Klq57Mk3ExhQc6Rc7jCECYiYEBKHjXc4ShpIYNNzng9Fz5KDkAfxFulO------7ccLIA23P7c54aznpRzK3GsvcQC45nnQNYQjcwcxc2ONxJubuaG6jNK5szmq9g-yXTB2zSbhTheCHilDljcIcJcOw2Bw8jWRwwicNnR111vmcCcD-DiXANs4C4MdYBdZHByk1uDgkDduuKiJFomLa8XcFca4uwVyjjcWOLcYIaTujMOM-acecfCeRxy5A46HEk4tYSpxYlSOIfnMEpFmMZuR0cTcQOW-7iLixh4kR22cXcUifDJxV2pdCUg7XGJ2h2mbtxwOyX7dvi9y2W3ztl3bctTsXl2PXqkBppuwOw6iQRwIHZiRyZIdnkdk38iOoj4Dstz4O9LLty3HDA2EIou9xFiPbDzvE9cd5tAp3mpF353-7vg9Jd9qncvXc06PFXcN6XD0JAfAO4rWcNmPdpHNu7Ua6GiQEgkHEbu6PjHMO6O6ulOl39dIixG83RFksQERjzpLp0wQ4cuni7pl12Mw6bLF4WF0Ir7yR9zPVBG6GQ4NlbugEWjYkSKboICO3ki7oxIuAXtil-xdHRWqUTL9OiOiutOtoI4HX3WJkN1l17YLhkRdf28LsdAsBN1wy2O1uux287W6k6m6hy0HIDbQ6iS6tyDq7qjqsVUVYioOI-VqdIEEWxFSvPsVwzbdsor8nS-eorN_6TdA42YrdaKKKOKCKGKZddvnFP3cRSQBi_lopSw6LqL_jF2v6Yi4i5v";
    const short_known_bits_data = "DGGP-wJj5Y3iBj5ZkJJsfLEuwY-WQPEfHzSLYMfKYLccrLr7HK0imx8--Mx80qgx8ops4-UUi8DHycwNj5DM8ROZRdQJzKANAnMyesjpzEu3lOZAuAYCcxBA5k5nj3TycynICJ2cFAnYlp0KL8nQoW-p0M4OKU6GJKgTgoTbToeq5yJ0Ka8bk7zebk7x_hJ3oYSRO8dISU5H4QicikW7VOOHgLKcGX42OXngxVxzHMHfHNHBDY5o_-VP-6Yso6YsoSpZmiBwFmWQqE8lmaSSzOQmlmUuXLCtNEWFaQXFmffASpZmlJqlmUajaWZLXUsxCBrKIBKGsoEVQ1mTxDaGsS5EaQ1kPghOGsQSAEGs8eJKhrKZJ4NyniYG5PgIINKzwACDcnSPwbWXbZg2tIAVhpeEJqhpi1d1Q2FGwCDYUH4GhsMnrA4bBLsFhoUu6XDQqSdJYbDx7pUNhTeyBvk8gpDfHyCIG-hgIXBvjpOsNRLr3Q1FJe2GnKrew0M8ZDsT-VDsPyAyHZA8B9Q9IDTIfKA6ofFdwIevADofGkQiRStPBMUrP3cUrge2YpWdAqH8m2ICHpV10Oie7UOWrOxa6O3FroOtrFrzVyxa0ve6LXAuAootaDoNi1-PAhFrpgNsUvZhdvFLz-m2KXwCOSKXnX4EUxwu2eimOJNeYpo49svFNH_yp_2SNTKKvYmplBVFbUzNS9LUzEUTtTIF3XbUxBWZ1qZ6qTa1Mp8bmrLeoOasn5NYmorPE5WrJ3XVqr-LYmqtIqkE1F9S3LUYtVb6KForNiihaCzxIoXNU3sULiTZIoWHxzAihUFXNcUL6qeuKFpq5tavN86Jq8mSBWr0D187V46s7zUiXEM1IpFkgmo5VIOagyskcqsTxXxVYfFylVkD2icq0mi0q5Lt7SriqwBVrPC7SrjCFpVgnkIVYH-EAqhT3AUqwO8TSr5NJtlWlFqlVHBXcqlt8KKjRVVuKjQVQGio5qMI0VHEVSRUYfFd4qKCRbio-qVRRUaarMxTjebQRTiYbbinIVaSKcOvMxY74YlxY5Ipu6LH1G3osev8qf1MCQ8xvVdDzD5OkPMhUYSh6kVTOHsoGmD2KuisPV1STg9jSYAegn3oA9A-IVh4KeAKQ9A6CbD3i4AA9SqbXDyNXKAPFq2pYjRmROWI0LVSxHJ4C2WI4hrssRgXAtyxFBmVLEfYOAsRpySVLDiftqWHD4LIWHIHumyw4dJtlkd83iyOSOAsjwkkLI9f5U_vLh9je4OD7D7iAH2QwfTB-klySH8lxDSH8WXEIP14Pbh_GILQ_BmE8YPwPzPKHwuE3ofgdmbIH_Js7wfpZd1D6NRJIHy2XU33NGdET7mhLPuc4bwvucRTE-laaBZ-laSQL33PsAGv7mnIFX7WzDTA-1n5V--1ww00_azs6Z_pf85SfS9Is6b6Y5hr_TBmdsjcYzBSW3GHxW3GQPcJ25SLom5lNmDcxZk2tys9xnbmNKiv6FT-Ff0KflZJ9CwwWQfQp1QElueTV3m5S8KW4iesVtwtuyffUZnb--oTIJ--zhoO--SwAB99D5wDffIIpN997CQb99TALvqLMJUX1E_MmJ9RgE3hfUTsya_pz4J1-nEky4PsdhMg-x_8qfwGa2UXBLWyhN7bWzOFurWxLI6tbIJtgE1sQVMAzWz1XarWynNgA15ZgThNeUx-ayvAnGa8nZJwGusuBbXWkm5I1l57XE1mLZuDQFozzmaAtBSGA0Bc4dNtAVLnp5oCwTVJrQFQZ7XaAvqgCtoC0557a_Mwvta_H5sQmv0Kp5Wvx2b52tFNlZa0Uk8oms5hyq1hmeVw4xmALMHGH5MIAcZDAG2HKQSmDmS7TcHMWQcIOV4Auw5jSC-DkGYAkgcgfkDqHAuAFEHIHZBJg55ABYcpVWeDiOAHkOFriI7QjRkgDNCNCSAdoRzgTZaEUuSaBoRgmkIJoRQZJfNCPsCAE0I05IR2g4n6Z5aDh-SGA0HIYAE7QcOySDRHJpHA0RyRb62iPwIqtEev8qf5NIA6xvdyB1iYBXDrIVaIQdpFBLh3KaCw7iqDRB2uoE2HcZ9EHYJ4nsOwTOJodC1bth2B1dBwd983iB2lXe4Oo1bxg6WqayFGaKk3ijNBXsBRnNRNMUZxCaAoK_hCcUFaRXeyjPqiEcozTUhLKK28BLKK0zZkorhUAElFZ1QEIUF_wkiKC9IpHUoMcqB2lBgypGDpje4LHTExyKOmQqfQDqkuxDrPxycOsVXIIdV1OQA6xlcljqDe66OoJjqAdBanMIdQOq6yOvfHmx1Sq7uOkanWx0Wq86UeorsuUeoOt2UeyeEDij2JquUeh813KPIK7pCj3qtcxR6muvJQi3kAIoRTHvihGFT25QidV70oOfHEYoOJFtyiOqUQCiP_lT-r8ApZRXhOUsoLwrKWZq7tKWYncQpZD4KeKWIKi0hSz1QmFLKbitynLf2mKcpnAkpKz1iUpydXnkprLuFpTWklzFJeEkBSYtXiKUwokkphQWTSUwzgbSFMEuTbxSFTTCspCpJVhTDx65UphTXRAKfN4LKfH5tyn0KhAUp8dUC8UoprHKUUksAUnKhdJSGVF2jtjMJMIdsTLUw7ZCqzEHdItmsd5-XKjvFW3kd11WqjvGUgFHcG8lgHcEwnKOwp6xOO4HVfR374TjDulWzAHaNROAOy1bWRwco3ohwcoCeRwczVZDDg5iWSRwch8sRhwcQVsVjg549xtHBymt8AcRzeYkjiOTL0g4joVW7jiOOrb6OI_5eiHEekWwAHEetV7Y4j1X-VP63vDTKLk4g0ygJ3GmZCE4w0xLE40yCA8yNMQV0aZ7AwADTKbgtxrLAmuNZPuQjjRWE7hrJ1yAANVoBLMNVpF7RDReEITRoxa5CWNQovZDDUKFy41DIS9UaglvYBDQVAABxoKkAbhqHqndRqFORGENeYEEo14_PKQa9AJauNeOva8NIoFuQaRSPbiGjgS3UaDL28t1jfoAN1h9waZusgEBJm7SOCQN3Jdtu3cVwAA3a8J1u4zg3oxWzCVeMVn3AYEYrgE0RIxWdfRW3fIAFtu0rgXm6iEAst0tdydGrouSRRq6Dkc0avIQi3GrS3JLxq4JopNGrQVM9xq_BCOsaum5HBGL2BAWKMXn3BwIxfAIAgIxedUQhRjHEAivGMcSKCRRjRwTnjGj_5U_uRVaWUXJytLKE6LmlmQgga0sS3NzSyCB1tLEHWS0s8EFztLKbiE7TlgQU605PuJwNJWe6zNOTsyTmmtAFutNaRxaJpL8FtWkxa4tWMForvbGC0NNsxgucOtYwVL0zkjBYIHasYKgrtvGC-PabdjBaYnE0-T9YJp8f2EtPoBBbLT469klpRLtEZpRSTfCaTlQhNIZ2HDljAnKo5YfflkcsgeE5BzSPxtHOUAlgHOLYiDmvAVmHOMt6YcwYEvpHMD82YQ5Cnr7RzA7L9I58gWKxzSvYhDlHCSaOS2ek0ZGiLujI0HM8ZHITrBGRS5foyMEAS9GRQSGBGR8EFCMjTcDzGOJ9kWMcPvzkjHIBOfoxw6_aKNHIHE6NHJLW40eE4gI0ev8qf34hB8xgQ1mHzD4pEPmQqMAQ-pHMTh9lANyj7FXnsfVhDWAfYzmvh9BgSHD6CYSx8FqIRR9A68qPvIBp4fUvPI-Rqsmj4tc07-zRdd79mg92b9nIRSP-yluu3-K0BZv8VpHUl_s-CKAH7NN1AT9WzAz9-rTHs36uAQwp_VnV41_i8u7n_F6R13fxjgRXN-MGXV3DBjeTgwYfkS6GDIYAlQwpFELQwym3shhizZDBhXgJbDDGkU7-Cp4Ln8FPzwL_BYYcR_wU7yiDDyb3GDClnuUMET1kDAtnr796jIuX96hLyT97OAiA_eS3Z-9BNEKf3kGXUH73qtMT96mpDX-RZhZvyJ-RPf5GGApn8idURBfjiaIG_jiSVAT9HYC1f0f_Kn91UbZRd7ENsoO_CG2ZCb3DbMQxBtkPhFsbYgqLuG2eCOJxtlN3FY3lgR9Ubyf4whsrCO-jeTru9jdZdZpG60juDhsvCPpBsxa7gkbhRfQaNwoPoBDcMhN2xuGIrjYVNXrGwqRTAsbh4JpOG4U17jDfmBNXhvx99nRv0Amro346-rY2igGcw2ikc2jZyqbGwy-vo_YwJK8P2H3mXH7IYEBY_pHlXH-UCdsf4q9I_rCTIB_jEA4_gwIt8P4Jki0fhQi3o_gddbIP_IC8Qf0rywfohFAIflrrwB5RdzcPKAiCHmcACUeYgNIPIIDyYeIMkIo88e5x5Td1EPFYEm1HipgAaPFgEkgB4p2bkQ8VUB4DxVSO5pHiqtQpHiqq_yp_6-GGUVMIQwygqm4YZmrbGGYhiAGGQQJEMMQe2xhnqpuxhlNZFwxlPEMZP9IwVnrFIxk7zBisuErjFaRVgMF54RLGDForEMQoqSVGIUFJLjEM1OIAxBL2TDAX5ZuGAqTSGGIeCKYYhTUglGPMCEkY8f6RDHoVP3DHjugcYR-AJowikt1GDlQNcYDICPEyxmHWSJlh_SAiZZDATxM0kq8TOUAWxM4riJEzXU7ImcZ-mIV1C3omffCLEzS7cxMonreJktknRK6JONEroW_RK84GJErSwcSJXBA3XiVoN9cSvx4AJiV07AsQvT9kUQvP6R4hfA9rIhednd6IY4XABsQxxIpFWIaOPWsQ0f_Kn8D8lMoy6kSmUOW0pmat1KZiPJkpkC7rSmILrqUz1QFSmU1AZKywIbeSsn3MBUorqnVSsndElV_JSq0jgVKLwi6BKMWgcg9Yn6bhD1h9xKAesgE4Q9pJMQw9yXaYQh7i6pnHtdXTI9xtMIA9gn6YEj2B9zPI9CntNoh7A6ouHvi7TXY9pXEKx6ie0xCD0tJ3JXmBLXUrx97ABK9DBVAleOzPSlIp-qrpSJ_VXUpGGEiMlIndUwko4e6wJQZV3EMmN4AcMmJhH0ZMge61GVIrqIZZ-cvDLFlZUZV4G5RljSYQhlBvuwDKB8AHGQWq5MMoHZdRl74JQDKlUT8MkanAAZFqqYURGiusiI0LnYiOQgjREcTbNERgXANMRFBu7iI-wIZ4iNMQHiHGYPtxDiYR5iHIVdcQ4d3hRI5N3liRySd6Ykee2wRI9f5U_zASGyXa6GxZ5DJbyhoVKhvMT9e0N5h-TOhvUFkSG9nDTIb2I9ob0KhKhve-A1DepZIqG8ieAhvFoOQ1MGtmMb7lsxiYIjZjIYa2ZSKoGzD_NqC87bJcJWxXUJwNs-w7gNs01uxNq8CNsZZltCiTgNoUF7m0EwgGwWjJLbBaGvzYLkIR2wVL3WwWBcKzNgqDM22C-CLzYLTeebQ9hwG0Efkq2gikdyW2gcPW2gGQO29Ru-beocBt7NTibeSybLb0E_ubegmKQDbwU8RW3oHV4jtvequzNvIhLNLbxbZrbIp-3rZE_z62RhVLGyJ2RK2OF1kI2OJJe20ce4Eto_-VP4gGGbE8QpGbExX0ZsgeuRDOk0wBnn5s2M8UGuM66lEozxpNozgn6LhnA_YADMLVphnA6AQz98l5GdKI3DNHDrGZaQAELNEHahZoKKSIWcntXkLKWRXQitNvjIRWkI-oWfVGciFmnIO1CrbzEVCrTAWBCrhgq2hVnZAJCL01bQi9IqyhGOVXMoRgytkEhQ-XaEFQDShBUi8ZCh49eoUKayRCO2ZCWjJrQloSIyEp_eQlSCIhKv8qf3J_DEDE";
    const short_known_bits_bits = new Map([["00000","5"],["0000100","0\",\"3"],["0000101","0101"],["0000110000","\"],[\"0111101"],["000011000100","]"],["000011000101","-"],["00001100011","["],["000011001","011111\",\""],["00001101","\"],[\"010100"],["000011100","\"],[\"0110011"],["000011101","\"],[\"0110100"],["000011110","\"],[\"01011"],["000011111","\"],[\"0110000"],["00010","9"],["00011000","\"],[\"10000"],["000110010","\"],[\"100011"],["000110011","\"],[\"11100"],["00011010","\"],[\"011100"],["00011011","\"],[\"011111"],["000111000","\"],[\"011"],["000111001","\"],[\"0111011"],["000111010","\"],[\"0110101"],["000111011","\"],[\"0110111"],["000111100","\"],[\"01111111"],["000111101","\"],[\"1000101"],["000111110","\"],[\"0111100"],["000111111","\"],[\"0111111"],["00100","6"],["00101000","\"],[\"01101"],["00101001","\"],[\"011011"],["001010100",","],["001010101","\"],[\"0101011"],["00101011","00101"],["00101100","\"],[\"01"],["00101101","01111\",\""],["00101110","00\",\""],["00101111","00111"],["00110","0"],["0011100","01111"],["0011101","011\",\""],["0011110","0\",\""],["0011111","001\",\""],["01000000","00\",\"3"],["01000001","0101\",\""],["01000010","\"],[\"111"],["010000110","\"],[\"1"],["010000111","\"],[\"0101001"],["010001","0111"],["0100100","01\",\""],["01001010","\"],[\"10001"],["01001011","0011\",\""],["01001100","001\",\"1"],["01001101","00\",\"2"],["01001110","\"],[\"0011"],["01001111","000\",\""],["0101","1"],["01100","00"],["01101000","\"],[\"0110"],["01101001","\"],[\"011101"],["01101010","\"],[\"010101"],["01101011","\"],[\"011001"],["0110110","\"],[\"11"],["011011100","\"],[\"0110001"],["011011101","\"],[\"0111001"],["01101111","000\",\"1"],["0111","3"],["10000","01"],["1000100","\"],[\"100"],["1000101","\"],[\"0101"],["1000110","\"],[\"0111"],["10001110","011111"],["10001111","0111111"],["1001","2"],["1010000","0001\",\""],["1010001","0000\",\""],["10100100","00011\",\""],["10100101","01101\",\""],["1010011","0111\",\""],["101010","0\",\"1"],["101011","0011"],["1011","7"],["110000","0\",\"2"],["11000100","0011\",\"1"],["11000101","00101\",\""],["11000110","00111\",\""],["11000111","\"],[\""],["11001","001"],["1101","4"],["1110","8"],["11110","011"],["1111100","00\",\"1"],["1111101","\"],[\"01100"],["1111110","\"],[\"01111"],["1111111","\""]]);
    const short_known_keys = [...markov.keys()];
    
    const short_known = decompress_indices(short_known_data, new Map(JSON.parse(decompress(short_known_bits_data, short_known_bits_bits))), short_known_keys);

    function gcd(x, y) {
        if (x == 0n)
            return y;
        if (y == 0n)
            return x;
        if (x == y)
            return x;

        var i_0;
        var i_1;

        for (i_0 = 0n; !(x % 2n); i_0++)
            x /= 2n;
        for (i_1 = 0n; !(y % 2n); i_1++)
            y /= 2n;

        var k = i_0 < i_1 ? i_0 : i_1;

        var n;

        while (x != y) {
            if (y > x) {
                n = x;

                x = y;
                y = n;
            }

            x -= y;

            do
                x /= 2n;
            while (!(x % 2n));
        }

        return x * (2n ** k);
    }
    
    function simplify(f) {
        var cd = gcd(f[0] < 0n ? -f[0] : f[0], f[1]);

        return [f[0] / cd, f[1] / cd];
    }
    
    function add(f0, f1) {
        return simplify([f0[0] * f1[1] + f1[0] * f0[1], f0[1] * f1[1]]);
    }
    function sub(f0, f1) {
        return simplify([f0[0] * f1[1] - f1[0] * f0[1], f0[1] * f1[1]]);
    }
    function mul(f0, f1) {
        return simplify([f0[0] * f1[0], f0[1] * f1[1]]);
    }
    function div(f0, f1) {
        return simplify([f0[0] * f1[1], f0[1] * f1[0]]);
    }
    function mod(f0, f1) {
        return simplify([(f0[0] * f1[1]) % (f1[0] * f0[1]), f0[1] * f1[1]]);
    }
    function cmp(f0, f1) {
        return f0[0] * f1[1] - f1[0] * f0[1];
    }
    function from_int(i) {
        return [BigInt(i), 1n];
    }
    function width_to_mid(from, width) {
        return add(from, div(width, [2n, 1n]));
    }

    function mis_to_width(mis) {
        function par_to_width(par) {
            function markov_tick_to_width(from, to) {
                var opts = markov.get(from);

                var sum = opts.reduce((s, y) => s + y[1], 0);

                var indx = opts.findIndex(o => o[0] == to);

                if (indx == -1)
                    throw "no tick: " + JSON.stringify(from) + " to " + JSON.stringify(to);

                var i = 0;
                var s = 0;

                for (i = 0; i < indx; i++)
                    s += opts[i][1];

                return [simplify([BigInt(s), BigInt(sum)]), simplify([BigInt(opts[i][1]), BigInt(sum)])];
            }

            par = ["~START", ...par, "~FINISH"];

            var from = [0n, 1n];
            var width = [1n, 1n];

            var tick;

            for (var i = 1; i < par.length; i++) {
                tick = markov_tick_to_width(par[i - 1], par[i]);

                from = add(from, mul(tick[0], width));
                width = mul(width, tick[1]);
            }

            return [from, width];
        }

        var from = [0n, 1n];
        var width = [1n, 1n];

        var tick;

        for (var i = 0; i < mis.length; i++) {
            tick = par_to_width(mis[i]);

            from = add(from, mul(tick[0], width));
            width = mul(width, tick[1]);
        }

        return [from, width];
    }

    function mortal_script_to_mis(script) {
        function mortal_script_to_width(script) {
            function mortal_byte_to_width(byte) {
                if (byte == -1) {
                    return [[79n, 80n], [1n, 80n]];
                } else if (byte < 32) {
                    return [mul(add(mul([BigInt(byte), 33n], [1n, 80n]), [79n, 80n]), [15n, 16n]), [1n, 2816n]];
                } else if (byte < 127) {
                    var indx = "+-{}*_.,:\\01%?()$".indexOf(String.fromCharCode(byte));
        
                    if (indx != -1) {
                        return [mul(from_int(indx), [25n, 512n]), [25n, 512n]];
                    } else if (byte == 39) {
                        return [[425n, 512n], [25n, 1024n]];
                    } else if (byte == 34) {
                        return [[875n, 1024n], [25n, 1024n]];
                    } else {
                        return [add(mul(from_int([...Array(95)].map((_, i) => i + 32).filter(c => !"+-{}*_.,:\\01%?()$'\"".includes(String.fromCharCode(c))).indexOf(byte)), [3n, 4864n]), [225n, 256n]), [3n, 4864n]];
                    }
                } else if (byte == 127) {
                    return [[2639n, 2816n], [1n, 2816n]];
                } else {
                    return [add(mul(from_int(byte - 128), [1n, 2560n]), [15n, 16n]), [1n, 2560n]];
                }
            }

            var bytes = [...new TextEncoder().encode(script), -1];
    
            var from = [0n, 1n];
            var width = [1n, 1n];
    
            var tick;
    
            for (var i = 0; i < bytes.length; i++) {
                tick = mortal_byte_to_width(bytes[i]);
    
                from = add(from, mul(tick[0], width));
                width = mul(width, tick[1]);
            }
    
            return [from, width];
        }

        function width_to_mis([from, width]) {
            function width_to_pars([from, width]) {
                function width_to_markov_ticks(part, [from, width]) {
                    var opts = markov.get(part);

                    var sum = opts.reduce((s, y) => s + y[1], 0);

                    var stop_bot = mul(from, from_int(sum));
                    var stop_top = mul(add(from, width), from_int(sum));

                    var i, k, s, t;

                    for (i = 0, s = 0; cmp(from_int(s += opts[i][1]), stop_bot) <= 0n; i++);
                    for (k = -1, t = 0; cmp(from_int(t), stop_top) < 0n; k++, t += opts[k][1]);

                    return [...Array(k - i + 1)].map((_, x) => [opts[i + x][0], x == 0 ? div(sub(stop_bot, from_int(s - opts[i][1])), from_int(opts[i][1])) : [0n, 1n], x == k - i ? div(sub(stop_top, from_int(t - opts[k][1])), from_int(opts[k][1])) : [1n, 1n]]).map(x => [x[0], x[1], sub(x[2], x[1])]);
                }

                var chains = [[["~START"], from, width]];
                var pars = [];
    
                while (chains.length) {
                    var n_chains = [];
    
                    for (var c, n, i = 0; i < chains.length; i++) {
                        n = width_to_markov_ticks(chains[i][0][chains[i][0].length - 1], [chains[i][1], chains[i][2]]);
    
                        for (c of n) {
                            if (c[0] == "~FINISH") {
                                pars.push([chains[i][0].slice(1), c[1], c[2]]);
                            } else if (c[1][0] == 0n && c[2][0] == c[2][1]) {
                                pars.push([[...chains[i][0].slice(1), c[0], "*"], [0n, 1n], [1n, 1n]]);
                            } else {
                                n_chains.push([[...chains[i][0], c[0]], c[1], c[2]]);
                            }
                        }
                    }
    
                    chains = n_chains;
                }
    
                return pars;
            }

            function within(x, [from, width]) {
                return cmp(from, x) < 0n && cmp(x, add(from, width)) < 0n;
            }
    
            var chains = [[[], from, width]];
            var scripts = [];
    
            /*if (within([1n, 2n], [from, width]))
                scripts.push([]);*/
    
            while (chains.length) {
                var n_chains = [];
    
                for (var c, n, i = 0; i < chains.length; i++) {
                    n = width_to_pars([chains[i][1], chains[i][2]]);
                    
                    for (c of n) {
                        if (c[0][c[0].length - 1] == "*") {
                            scripts.push([...chains[i][0], c[0]]);
                        } else {
                            if (within(width_to_mid(...mis_to_width([...chains[i][0], c[0]])), [from, width])) {
                                scripts.push([...chains[i][0], c[0], ["*"]]);
                            } else {
                                n_chains.push([[...chains[i][0], c[0]], c[1], c[2]]);
                            }
                        }
                    }
                }
    
                chains = n_chains;
                
                console.log(chains.length + " chains, " + scripts.length + " scripts");
            }
    
            return scripts;
        }

        return width_to_mis(mortal_script_to_width(script));
    }

    function mis_to_mortal_script(mis) {
        function frac_to_mortal_script(frac) {
            function frac_to_mortal_byte(frac) {
                if (cmp(frac, [15n, 16n]) < 0n) {
                    frac = mul(frac, [16n, 15n]);

                    if (cmp(frac, [15n, 16n]) < 0n) {
                        frac = mul(frac, [16n, 15n]);

                        if (cmp(frac, [17n, 18n]) < 0n) {
                            frac = mul(frac, [18n, 1n]);

                            return ["+-{}*_.,:\\01%?()$"[Number(sub(frac, mod(frac, [1n, 1n]))[0])].charCodeAt(0), mod(frac, [1n, 1n])];
                        } else {
                            frac = mul(sub(frac, [17n, 18n]), [36n, 1n]);

                            return ["'\""[Number(sub(frac, mod(frac, [1n, 1n]))[0])].charCodeAt(0), mod(frac, [1n, 1n])];
                        }
                    } else if (cmp(frac, [79n, 80n]) < 0n) {
                        frac = mul(sub(frac, [15n, 16n]), [1520n, 1n]);

                        return [[...Array(95)].map((_, i) => i + 32).filter(c => !"+-{}*_.,:\\01%?()$'\"".includes(String.fromCharCode(c)))[Number(sub(frac, mod(frac, [1n, 1n]))[0])], mod(frac, [1n, 1n])];
                    } else {
                        frac = mul(sub(frac, [79n, 80n]), [2640n, 1n]);

                        return [(x => x < 32 ? x : 127)(Number(sub(frac, mod(frac, [1n, 1n]))[0])), mod(frac, [1n, 1n])];
                    }
                } else if (cmp(frac, [79n, 80n]) < 0n) {
                    frac = mul(sub(frac, [15n, 16n]), [2560n, 1n]);

                    return [Number(sub(frac, mod(frac, [1n, 1n]))[0]) + 128, mod(frac, [1n, 1n])];
                } else {
                    return [-1, mod(mul(sub(frac, [79n, 80n]), [80n, 1n]), [1n, 1n])];
                }
            }

            var byte;
            var bytes = [];

            var loop = new Set();

            do {
                loop.add(frac.join("_"));

                [byte, frac] = frac_to_mortal_byte(frac);

                if (loop.has(frac.join("_")))
                    throw "inf: " + byte + " (" + frac.join("_") + ")";

                bytes.push(byte);
            } while (byte != -1);

            return new TextDecoder().decode(new Uint8Array(bytes.slice(0, -1)));
        }

        return frac_to_mortal_script(width_to_mid(...mis_to_width(mis)));
    }

    function string_punc_odds(string) {
        var pars = string.split(/\n+/).map(s => s.match(/(\w([\w'\u2018\u2019]*\w)?|\n+|[^\w\n ]*![!1]+[^\w\n ]*|[^\w\n ]+) ?/gs) || []);

        var parts, i, c0, c1, d, p0, p1, p;

        var prod = 1, x_prod = 1;

        for (parts of pars) {
            for (i = 1; i < parts.length; i++) {
                c0 = !parts[i].match(/\w/) || parts[i].includes("!");
                c1 = !parts[i - 1].match(/\w/) || parts[i - 1].includes("!");
                p0 = c0 && punc_rock_odds.get(parts[i].trim())[0];
                p1 = c1 && punc_rock_odds.get(parts[i - 1].trim())[1];
                p = c0 ? c1 ? 1 : p0 : c1 ? p1 : 0.5;
                d = parts[i - 1].endsWith(" ");

                if (!c0 && !c1)
                    continue;

                prod *= d ? p : 1 - p;
                x_prod *= (p ** 2) + ((1 - p) ** 2);
            }
        }

        return prod / x_prod;
    }
    
    function build_crc_dict() {
        var crc_dict = [];

        for (var c, k, n = 0; n < 256; n++) {
            c = n;

            for (k = 0; k < 8; k++) {
                c = (c % 2 ? (0xedb88320 ^ (c >>> 1)) : (c >>> 1));
            }

            crc_dict[n] = c;
        }

        return crc_dict;
    }

    const crc_dict = build_crc_dict();

    function crc32(bytes) {
        var crc = -1;

        for (var i = 0; i < bytes.length; i++) {
            crc = (crc >>> 8) ^ crc_dict[(crc ^ bytes[i]) & 0xff];
        }

        return ~crc >>> 0;
    }
    
    function dual_string_crc(s0, s1) {
        var crc_s1 = crc32(new TextEncoder().encode(s1));
        var p0 = [crc_s1 / 0x1000000 | 0, (crc_s1 / 0x10000 | 0) % 0x100, (crc_s1 / 0x100 | 0) % 0x100, crc_s1 % 0x100, ...new TextEncoder().encode(s0)];
        var p1 = [...new TextEncoder().encode(s1)];

        while (p0.length < p1.length)
            p0.push(0xff);
        while (p1.length < p0.length)
            p1.push(0xff);

        var p = Array(p0.length);

        for (var k = 0; k < p0.length; k++)
            p[k] = p0[k] ^ p1[k];

        return crc32(p);
    }
    
    function mis_to_final_string(mis) {
        function mis_to_string(mis) {
            function par_to_string(parts) {
                var string = parts[0];

                for (var i = 1; i < parts.length; i++) {
                    if (!((!parts[i].match(/\w/) || parts[i].includes("!")) && Math.random() >= punc_rock_odds.get(parts[i])[0] || (!parts[i - 1].match(/\w/) || parts[i - 1].includes("!")) && Math.random() >= punc_rock_odds.get(parts[i - 1])[1])) {
                        string += " ";
                    }

                    string += parts[i];
                }

                return string;
            }

            var pars = mis.map(par_to_string);
            var string = pars[0];
            
            for (var i = 1; i < pars.length; i++) {
                string += "\n";
                
                if ((dual_string_crc(pars[i - 1], pars[i]) / 0x100000000) >= 7 / 939)
                    string += "\n";
                
                string += pars[i];
            }
            
            return string;
        }
        
        if (mis.length == 0)
            return "";

        var string;

        do
            string = mis_to_string(mis);
        while (string_punc_odds(string) <= 0.01);

        return string;
    }

    function final_string_to_mis(string) {
        string = string.replace(/\r\n|\r/g, "\n").replace(/\n+$/s, "");
        
        function string_to_mis(string) {
            function string_to_par(string) {
                return (string.match(/\w([\w'\u2018\u2019]*\w)?|\n+|[^\w\n ]*![!1]+[^\w\n ]*|[^\w\n ]+| /gs) || []).filter(x => x != " ");
            }

            return string.split("\n").filter(s => s).map(string_to_par);
        }
        
        if (string_punc_odds(string) < 0.01)
            return null;
        
        var pars = string.match(/.+\n*/g) || [];
        
        for (var i = 1; i < pars.length; i++) {
            if (pars[i - 1].endsWith("\n\n\n"))
                return null;
            
            if (pars[i - 1].endsWith("\n\n") != ((dual_string_crc(pars[i - 1].replace(/\n+$/s, ""), pars[i].replace(/\n+$/s, "")) / 0x100000000) >= 7 / 939))
                return null;
        }
        
        return string_to_mis(string);
    }

    function mis_ticks(part) {
        return markov.get(part);
    }
    
    function prob_string_size(parts) {
        if (parts[0] == "~START")
            parts = parts.slice(1);
        if (parts[parts.length - 1] == "~FINISH")
            parts = parts.slice(0, -1);

        var size = new TextEncoder().encode(parts[0]).length;

        for (var c0, c1, p0, p1, p, i = 1; i < parts.length; i++) {
            c0 = !parts[i].match(/\w/) || parts[i].includes("!");
            c1 = !parts[i - 1].match(/\w/) || parts[i - 1].includes("!");
            p0 = c0 && punc_rock_odds.get(parts[i])[0];
            p1 = c1 && punc_rock_odds.get(parts[i - 1])[1];
            p = c0 ? c1 ? 1 : p0 : c1 ? p1 : 1;

            size += p + new TextEncoder().encode(parts[i]).length;
        }

        return size;
    }
    
    function short_mis_finish(part) {
        if (!short_known.has(part))
            throw part;
        
        var finish = [part];
        
        while (finish[finish.length - 1] != "~FINISH") {
            finish.push(short_known.get(finish[finish.length - 1]));
        }
        
        return finish.slice(0, -1);
    }

    return {
        mortal_script_to_mis,
        mis_to_mortal_script,
        mis_to_final_string,
        final_string_to_mis,
        mis_ticks,
        short_mis_finish,
        prob_string_size
    };
})();